//Generated by TurboLink CodeGenerator, do not edit!
#pragma once
#include "TurboLinkGrpcContext.h"
#include "SGame/GameMessage.h"
#include "SGame/GameMarshaling.h"
class GrpcContext_DungeonService_Login : public GrpcContext_Ping_Pong<DungeonService_Login_ReaderWriter, ::game::LoginResponse>
{
	friend class UDungeonServiceClient;
	typedef GrpcContext_Ping_Pong<DungeonService_Login_ReaderWriter, ::game::LoginResponse> Super;

private:
	void Call(const FGrpcGameLoginRequest& Request);
	virtual void OnRpcEvent(bool Ok, const void* EventTag) override;

public:
	GrpcContext_DungeonService_Login(FGrpcContextHandle _Handle, UGrpcService* _Service, UGrpcClient* _Client);
};

class GrpcContext_DungeonService_Logout : public GrpcContext_Ping_Pong<DungeonService_Logout_ReaderWriter, ::game::LogoutResponse>
{
	friend class UDungeonServiceClient;
	typedef GrpcContext_Ping_Pong<DungeonService_Logout_ReaderWriter, ::game::LogoutResponse> Super;

private:
	void Call(const FGrpcGameLogoutRequest& Request);
	virtual void OnRpcEvent(bool Ok, const void* EventTag) override;

public:
	GrpcContext_DungeonService_Logout(FGrpcContextHandle _Handle, UGrpcService* _Service, UGrpcClient* _Client);
};

class GrpcContext_DungeonService_GetCurrentRoom : public GrpcContext_Ping_Pong<DungeonService_GetCurrentRoom_ReaderWriter, ::game::RoomResponse>
{
	friend class UDungeonServiceClient;
	typedef GrpcContext_Ping_Pong<DungeonService_GetCurrentRoom_ReaderWriter, ::game::RoomResponse> Super;

private:
	void Call(const FGrpcGamePlayerRequest& Request);
	virtual void OnRpcEvent(bool Ok, const void* EventTag) override;

public:
	GrpcContext_DungeonService_GetCurrentRoom(FGrpcContextHandle _Handle, UGrpcService* _Service, UGrpcClient* _Client);
};

class GrpcContext_DungeonService_Move : public GrpcContext_Ping_Pong<DungeonService_Move_ReaderWriter, ::game::RoomResponse>
{
	friend class UDungeonServiceClient;
	typedef GrpcContext_Ping_Pong<DungeonService_Move_ReaderWriter, ::game::RoomResponse> Super;

private:
	void Call(const FGrpcGameMoveRequest& Request);
	virtual void OnRpcEvent(bool Ok, const void* EventTag) override;

public:
	GrpcContext_DungeonService_Move(FGrpcContextHandle _Handle, UGrpcService* _Service, UGrpcClient* _Client);
};

class GrpcContext_DungeonService_GetDungeonData : public GrpcContext_Ping_Pong<DungeonService_GetDungeonData_ReaderWriter, ::game::GetDungeonDataResponse>
{
	friend class UDungeonServiceClient;
	typedef GrpcContext_Ping_Pong<DungeonService_GetDungeonData_ReaderWriter, ::game::GetDungeonDataResponse> Super;

private:
	void Call(const FGrpcGameGetDungeonDataRequest& Request);
	virtual void OnRpcEvent(bool Ok, const void* EventTag) override;

public:
	GrpcContext_DungeonService_GetDungeonData(FGrpcContextHandle _Handle, UGrpcService* _Service, UGrpcClient* _Client);
};

