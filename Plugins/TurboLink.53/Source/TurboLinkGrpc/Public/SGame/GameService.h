//Generated by TurboLink CodeGenerator, do not edit!
#pragma once
#include "TurboLinkGrpcService.h"
#include "SGame/GameClient.h"
#include "GameService.generated.h"

class UTurboLinkGrpcManager;

UCLASS(ClassGroup = TurboLink, BlueprintType)
class TURBOLINKGRPC_API UDungeonService : public UGrpcService
{
	GENERATED_BODY()
public:
	UFUNCTION(BlueprintCallable, Category = TurboLink)
	virtual void Connect() override;
	
	UFUNCTION(BlueprintCallable, Category = TurboLink)
	virtual EGrpcServiceState GetServiceState() const override;

	UFUNCTION(BlueprintCallable, Category = TurboLink)
	UDungeonServiceClient* MakeClient();

private:
	virtual void Shutdown() override;

	UPROPERTY()
	UDungeonServiceClient* InnerClient; 
public:
	typedef TFunction<void(const FGrpcResult& GrpcResult, const FGrpcGameLoginResponse& Response)> FLoginResponseLambda;
	void CallLogin(const FGrpcGameLoginRequest& Request, FLoginResponseLambda ResponseLambda, FGrpcMetaData MetaData = FGrpcMetaData(), float DeadLineSeconds = 0.f);

	typedef TFunction<void(const FGrpcResult& GrpcResult, const FGrpcGameLogoutResponse& Response)> FLogoutResponseLambda;
	void CallLogout(const FGrpcGameLogoutRequest& Request, FLogoutResponseLambda ResponseLambda, FGrpcMetaData MetaData = FGrpcMetaData(), float DeadLineSeconds = 0.f);

	typedef TFunction<void(const FGrpcResult& GrpcResult, const FGrpcGameRoomResponse& Response)> FGetCurrentRoomResponseLambda;
	void CallGetCurrentRoom(const FGrpcGamePlayerRequest& Request, FGetCurrentRoomResponseLambda ResponseLambda, FGrpcMetaData MetaData = FGrpcMetaData(), float DeadLineSeconds = 0.f);

	typedef TFunction<void(const FGrpcResult& GrpcResult, const FGrpcGameRoomResponse& Response)> FMoveResponseLambda;
	void CallMove(const FGrpcGameMoveRequest& Request, FMoveResponseLambda ResponseLambda, FGrpcMetaData MetaData = FGrpcMetaData(), float DeadLineSeconds = 0.f);

	typedef TFunction<void(const FGrpcResult& GrpcResult, const FGrpcGameGetDungeonDataResponse& Response)> FGetDungeonDataResponseLambda;
	void CallGetDungeonData(const FGrpcGameGetDungeonDataRequest& Request, FGetDungeonDataResponseLambda ResponseLambda, FGrpcMetaData MetaData = FGrpcMetaData(), float DeadLineSeconds = 0.f);

public:
	class Private;
	Private* const d = nullptr;

public:
	UDungeonService();
	virtual ~UDungeonService();
};

